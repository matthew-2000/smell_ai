name: "CodeSmile Analyzer"
description: "Runs a quick scan for code smells on recently modified files and opens an issue if any are found."
author: "Simone Silvestri - Matteo Ercolino"

inputs:
  quick-scan:
    description: "Enable quick scan mode (default: true)"
    required: false
    default: "true"
  commit-depth:
    description: "Depth for git commit analysis (default: 1)"
    required: false
    default: "1"

outputs:
  smells:
    description: "List of detected code smells"
    value: ${{ steps.smell-analyzer.outputs.smells }}

runs:
  using: "composite"
  steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
      shell: bash

    - name: Run CodeSmile Quick Scan
      id: smell-analyzer
      run: |
        python -c "
        from ci_support.ci_executor import CIExecutor
        CIExecutor.run_quick_scan(
          input_dir='.',
          output_dir='./codesmile_output',
          commit_depth=int('${{ inputs.commit-depth }}')
        )
        "
        if [ -s "./codesmile_output/output/overview.csv" ]; then
          echo "⚠️ Code smells found:"
          cat "./codesmile_output/output/overview.csv"
          echo "smells<<EOF" >> $GITHUB_OUTPUT
          cat "./codesmile_output/output/overview.csv" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          echo "No code smells found."
          echo "smells=" >> $GITHUB_OUTPUT
        fi
      shell: bash

    - name: Create GitHub Issue if smells found
      id: issue-body-generator
      if: steps.smell-analyzer.outputs.smells != ''
      run: |
        echo "Generating markdown summary and title from report..."
        python - <<EOF
        from ci_support.ci_report_parser import CIReportParser
        import os
        parser = CIReportParser('./codesmile_output/output/overview.csv')
        metadata = parser.generate_issue_metadata()
        with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
            fh.write(f"title={metadata['title']}\n")
            fh.write("summary<<EOF\n")
            fh.write(metadata['body'] + "\n")
            fh.write("EOF\n")
        EOF
      shell: bash

    - name: Open GitHub Issue
      if: steps.smell-analyzer.outputs.smells != ''
      uses: actions/github-script@v7
      with:
        github-token: ${{ github.token }}
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `${{ steps.issue-body-generator.outputs.title }}`,
            body: `${{ steps.issue-body-generator.outputs.summary }}`
          });